@startuml
interface view.listeners.mainframe.homeTab.ProfilePanelListener {
+ void updateRequested(User)
}
class view.frames.mainFrame.FilterLabelPopupFrame {
- JButton button
- JPanel parentPanel
- JScrollPane scrollPane
- Set<model.entities.Label> labelSet
- java.util.List<LabelPanel> labelPanels
- java.util.List<String> selectedLabels
- FilterByLabelListener listener
- void addComponents()
~ void initializeLabelPanels()
~ void addLabelPanelsToParentPanel()
+ void setListener(FilterByLabelListener)
}
class view.frames.mainFrame.LabelPanel {
- JCheckBox checkBox
- model.entities.Label label
+ JCheckBox getCheckBox()
+ Label getLabel()
+ boolean isSelected()
}
class model.httpclients.RatingClient {
- HttpClient client
- String URL
- ObjectMapper mapper
- HttpRequest request
- HttpResponse<String> response
+ Rating add(Rating)
+ void delete(String)
+ List<Rating> getAll()
+ Rating get(String)
+ Rating update(String,Rating)
+ List<Rating> getRatingsForExemplar(String)
+ double getAvgRatingForExemplar(String)
}
interface view.listeners.ActionWithStringListener {
~ void stringSubmitted(String)
}
class view.panels.mainFrame.homeTab.MyExemplarsPanel {
- User user
~ JPanel exemplarPanelParent
- List<Exemplar> myExemplars
- JScrollPane scrollPane
~ Border border
- NewTabListener exemplarListener
- Map<String,JCheckBox> selectedExemplarMap
~ JPanel buttonPanel
~ ActionListener exemplarLibraryListener
~ ActionListener contributorLibraryListener
- ActionListener createExemplarListener
+ void fetchExemplars()
+ void addExemplarsToScrollPane()
~ void initializeButtonPanel()
~ void addComponents()
~ void openExemplars()
+ void setExemplarListener(NewTabListener)
+ void setCreateExemplarListener(ActionListener)
+ void setCreateExemplarLibraryListener(ActionListener)
+ void setCreateContributorLibraryListener(ActionListener)
}
interface view.listeners.mainframe.exemplarTab.DeleteExemplarListener {
~ void deleteRequested(String,ExemplarTab)
}
class model.entities.Label {
- String value
+ String getValue()
+ void setValue(String)
+ boolean equals(Object)
+ int hashCode()
}
interface view.listeners.mainframe.NewCommunityListener {
~ void NewCommunityRequested(String)
}
interface view.listeners.mainframe.exemplarTab.AddLabelListener {
+ void buttonClicked(ExemplarTab)
}
class view.events.UserEvent {
- String username
- String fullname
- String password
- int isContributor
+ String getUsername()
+ void setUsername(String)
+ String getFullname()
+ void setFullname(String)
+ String getPassword()
+ void setPassword(String)
+ int getIsContributor()
+ void setIsContributor(int)
}
class view.frames.mainFrame.NewRatingPopupFrame {
- Exemplar exemplar
- ExemplarTab tab
- JLabel label
- JPanel parentPanel
- {static} int RATING_MIN
- {static} int RATING_MAX
- {static} int RATING_INI
- JSlider slider
- JButton button
- NewRatingListener listener
+ Exemplar getExemplar()
+ void setExemplar(Exemplar)
+ void setListener(NewRatingListener)
+ ExemplarTab getTab()
+ void setTab(ExemplarTab)
+ NewRatingListener getListener()
}
class view.frames.mainFrame.ConfirmCommunityDeletionFrame {
- JPanel parentPanel
- JLabel label
- JTextField textField
- JButton button
- ActionListener confirmListener
+ void setConfirmListener(ActionListener)
}
class controller.LoginController {
- UserClient userClient
- LoginFrame loginFrame
- RegisterForm registerForm
- User currentUser
- ActionListener loginListener
~ Color backGroundColor
~ void processLoginRequest(String,String)
+ void processRegistrationRequest(UserEvent)
~ void initializeLoginFrame()
~ void initializeRegisterForm()
+ void startLoginProcess()
+ void setLoginListener(ActionListener)
+ LoginFrame getLoginFrame()
+ User getCurrentUser()
+ void setCurrentUser(User)
+ ActionListener getLoginListener()
}
interface view.listeners.mainframe.FilterByLabelListener {
~ void filter(List<String>)
}
class model.entities.Comment {
- long id
- String value
- User creator
- Exemplar exemplar
- List<Comment> answers
+ long getId()
+ void setId(long)
+ String getValue()
+ void setValue(String)
+ User getCreator()
+ void setCreator(User)
+ Exemplar getExemplar()
+ void setExemplar(Exemplar)
+ List<Comment> getAnswers()
+ void setAnswers(List<Comment>)
+ boolean equals(Object)
+ int hashCode()
}
class view.panels.mainFrame.CommunityLibraryTab {
~ JPanel communityPanelParent
- JScrollPane scrollPane
~ Border border
~ JPanel buttonPanel
- ActionWithComponentListener closeListener
- NewTabListener communityListener
- JComboBox sortingComboBox
- JComboBox sortingComboBox2
- ItemListener sortingListener
- List<Community> allCommunities
- Map<Community,double[]> exemplarMap
- Map<String,JCheckBox> selectedCommunityMap
+ void fetchCommunities(String)
+ void addCommunitiesToScrollPane()
~ void addComponents()
~ void initializeButtonPanel()
- void initializeSortingListener()
+ void updateTab()
~ void openCommunities()
+ void setCloseListener(ActionWithComponentListener)
+ void setCommunityListener(NewTabListener)
}
class view.panels.mainFrame.homeTab.ProfilePanel {
~ JLabel userNameLabel
~ JLabel fullNameLabel
~ JLabel oldPasswordLabel
~ JLabel passwordLabel2
~ JLabel passwordLabel1
~ JTextField userNameText
~ JTextField fullNameText
~ JPasswordField oldPasswordField
~ JPasswordField passwordField1
~ JPasswordField passwordField2
~ JLabel contributorLabel
~ JCheckBox contributorCheckBox
~ JButton updateButton
~ JButton deleteUserButton
~ User user
~ ProfilePanelListener updateListener
~ ProfilePanelListener deleteListener
- ConfirmDeletalFrame confirmFrame
~ void addComponents()
~ void setData()
~ void addActionListener()
~ void initializeConfirmFrame()
+ void setUser(User)
+ void setUpdateUserListener(ProfilePanelListener)
+ void setDeleteListener(ProfilePanelListener)
}
class view.panels.mainFrame.homeTab.ProfilePanel.ConfirmDeletalFrame {
~ ActionListener confirmedListener
~ ActionListener cancelledListener
- JButton confirmButton
- JButton cancelButton
- JPanel buttonPanel
- JPanel panel
- JLabel label
~ void addListeners()
+ void setConfirmedListener(ActionListener)
+ void setCancelledListener(ActionListener)
}
class model.entities.Community {
- String name
- List<Exemplar> exemplars
- List<User> members
- User creator
+ String getName()
+ void setName(String)
+ List<Exemplar> getExemplars()
+ void setExemplars(List<Exemplar>)
+ List<User> getMembers()
+ void setMembers(List<User>)
+ User getCreator()
+ void setCreator(User)
+ boolean equals(Object)
+ int hashCode()
}
class model.httpclients.ExemplarClient {
- HttpClient client
- String URL
- ObjectMapper mapper
- HttpRequest request
- HttpResponse<String> response
+ Exemplar add(Exemplar)
+ void delete(String)
+ List<Exemplar> getAll()
+ Exemplar get(String)
+ Exemplar update(String,Exemplar)
+ List<Exemplar> getExemplarForCreator(String)
+ List<Exemplar> getExemplarsForUser(String)
+ List<Exemplar> searchExemplars(String)
+ List<Exemplar> searchExemplarsByLabel(String)
}
interface view.listeners.mainframe.communityTap.DeleteCommunityListener {
~ void deleteRequested(String,CommunityTab)
}
class model.entities.User {
- String username
- int isContributor
- String fullName
- String password
+ String getUsername()
+ void setUsername(String)
+ int getIsContributor()
+ void setIsContributor(int)
+ String getFullName()
+ void setFullName(String)
+ String getPassword()
+ void setPassword(String)
+ int hashCode()
+ boolean equals(Object)
+ String toString()
}
class controller.MainController {
- LoginController loginController
- User currentUser
- UserClient userClient
- ExemplarClient exemplarClient
- CommunityClient communityClient
- LabelClient labelClient
- RatingClient ratingClient
- CommentClient commentClient
- MainFrame mainFrame
- HomeTab homeTab
- NewExemplarPopupFrame newExemplarPopupFrame
- NewLabelPopupFrame newLabelPopupFrame
- NewCommunityPopupFrame newCommunityPopupFrame
- NewRatingPopupFrame newRatingPopupFrame
- AddUserFrame addContributorFrame
- ExemplarLibraryTab initialExemplarLibraryTab
- ContributorLibraryTab initialContributorLibraryTab
- CommunityLibraryTab initialCommunityLibraryTab
~ boolean librarysLoaded
- ActionListener logoutListener
+ {static} List<Exemplar> exemplars
+ {static} List<User> users
+ {static} List<Community> communities
+ {static} List<Label> labels
+ {static} List<Rating> ratings
+ {static} List<Comment> comments
~ boolean dataLoaded
+ {static} void main(String[])
~ void checkDataStatus()
~ void startApplication()
~ void waitForDataAfterLogin()
+ void loginSuccesfull()
~ void asyncLoadData()
~ void initializeMainFrame()
+ void addExemplar(Exemplar)
~ void initializeNewExemplarFrame()
~ void initializeNewCommunityFrame()
~ void initializeNewLabelPopupFrame()
~ void initializeNewRatingPopupFrame()
~ void initializeAddContributorFrame()
~ ActionListener getOpenExemplarLibraryListener(boolean)
~ void addListenersToExemplarLibrary(ExemplarLibraryTab)
~ ActionListener getOpenContributorLibraryListener(boolean)
~ void addListenersToContributorLibrary(ContributorLibraryTab)
~ ActionListener getOpenCommunityLibraryListener(boolean)
~ void addListenersToCommunityLibrary(CommunityLibraryTab)
~ void addListenersToHomeTab()
~ void refreshHomeTab()
~ void createNewExemplarAndInitializeTab(String)
~ void createNewCommunityAndInitializeTab(String)
~ void createNewContributorTab(String)
~ void addExemplarTabToMainframe(String)
~ void addCommunityTabToMainframe(String)
~ void addListenersToExemplarTab(ExemplarTab)
~ void addListenersToCommunityTab(CommunityTab)
- void exportExemplar(String,Exemplar)
+ boolean verifyExemplarName(String)
+ boolean verifyCommunityName(String)
~ void setLogoutListener(ActionListener)
- void logout()
+ User getCurrentUser()
+ LoginController getLoginController()
+ NewRatingPopupFrame getNewRatingPopupFrame()
+ void setCurrentUser(User)
+ void setHomeTab(HomeTab)
}
class view.frames.mainFrame.ConfirmExemplarDeletionFrame {
- JPanel parentPanel
- JLabel label
- JTextField textField
- JButton button
- ActionListener confirmListener
+ ActionListener getConfirmListener()
+ void setConfirmListener(ActionListener)
}
interface view.listeners.mainframe.AddContributorListener {
~ void addingRequested(User)
}
class view.panels.mainFrame.homeTab.MyCommunitiesPanel {
- User user
~ JPanel communityPanelParent
- java.util.List<Community> myCommunities
- List<JPanel> myCommunityPanels
- JScrollPane scrollPane
~ Border border
- NewTabListener newTabListener
- Map<String,JCheckBox> selectedCommunityMap
~ JPanel buttonPanel
- ActionListener createCommunityListener
~ void fetchCommunites()
~ void addCommunites()
~ void addComponentsCommunity()
~ void initializeButtonPanel()
~ void openCommunity()
+ void setNewTabListener(NewTabListener)
+ void setCreateExemplarListener(ActionListener)
}
class model.httpclients.CommentClient {
- HttpClient client
- String url
- ObjectMapper mapper
- HttpRequest request
- HttpResponse<String> response
+ Comment add(Comment)
+ void delete(String)
+ List<Comment> getAll()
+ Comment get(String)
+ Comment update(String,Comment)
+ List<Comment> findCommentsForExemplar(String)
}
interface view.listeners.login.LoginListener {
+ void loginRequested(String,String)
}
interface view.listeners.mainframe.exemplarTab.RatingListener {
+ void ratingRequested(ExemplarTab)
}
class view.frames.login.LoginFrame {
~ Container container
~ JLabel userLabel
~ JLabel passwordLabel
~ JTextField userTextField
~ JPasswordField passwordField
~ JButton loginButton
~ JButton resetButton
~ JButton guestButton
~ JButton registerButton
~ JCheckBox showPassword
~ LoginListener loginListener
~ RegisterButtonListener registerListener
~ JLabel title
+ void setLayoutManager()
+ void setLocationAndSize()
+ void addComponentsToContainer()
+ void addListenersToComponents()
+ LoginListener getLoginListener()
+ void setLoginListener(LoginListener)
+ void setRegisterListener(RegisterButtonListener)
+ JButton getLoginButton()
+ Container getContainer()
+ JCheckBox getShowPassword()
+ void setEditable(boolean)
}
interface view.listeners.mainframe.NewExemplarListener {
~ void NewExemplarRequested(String)
}
interface view.listeners.mainframe.NewLabelListener {
~ void labelRequested(String)
}
interface view.listeners.mainframe.communityTap.UpdateCommunityListener {
~ void updateRequested(Community)
}
class view.frames.mainFrame.AddUserFrame {
- ExemplarTab tab
- JPanel parentPanel
- JTextField searchField
- JButton searchButton
- JPanel searchPanel
- JList<User> searchList
- JButton addButton
- JScrollPane listScroller
- UserClient client
- AddContributorListener listener
~ void initializeComponents()
~ void addComponents()
~ User[] fetchUsers(String)
~ void addActionListeners()
+ ExemplarTab getTab()
+ void setTab(ExemplarTab)
+ void setListener(AddContributorListener)
}
class view.panels.mainFrame.ContributorLibraryTab {
~ JPanel contributorPanelParent
- JScrollPane scrollPane
~ Border border
~ JPanel buttonPanel
- ExemplarClient exemplarClient
- RatingClient ratingClient
- JComboBox sortingComboBox
- JComboBox sortingComboBox2
- ItemListener sortingListener
- ActionWithComponentListener closeListener
~ FilterByLabelListener filterListener
- NewTabListener contributorListener
~ FilterLabelPopupFrame filterLabelPopupFrame
- List<String> filteredLabels
- Set<model.entities.Label> allLabels
- List<User> allContributors
- List<User> filteredContributors
- Map<User,double[]> exemplarMap
- Map<User,List<model.entities.Label>> labelsPerContributor
- Map<String,JCheckBox> selectedContributorMap
- Map<User,List<Exemplar>> contributorExemplarMap
~ boolean filtered
+ void fetchContributors(String)
+ void addExemplarInformation()
+ void addContributorsToScrollPane()
~ void addComponents()
~ void initializeButtonPanel()
~ void openContributors()
- void initializeSortingListener()
+ void updateTab()
~ void initializeFilterLabelFrame()
+ void filterContributors()
+ void setCloseListener(ActionWithComponentListener)
+ void setContributorListener(NewTabListener)
}
class model.httpclients.CommunityClient {
- HttpClient client
- String url
- ObjectMapper mapper
- HttpRequest request
- HttpResponse<String> response
+ Community add(Community)
+ void delete(String)
+ List<Community> getAll()
+ Community get(String)
+ Community update(String,Community)
+ List<Community> getCommunitiesForUser(String)
+ List<Community> searchCommunities(String)
}
interface view.listeners.mainframe.communityTap.ActionWithUserListener {
~ void actionPerformed(User)
}
class view.panels.mainFrame.ExemplarLibraryTab {
- List<Exemplar> allExemplars
- List<Exemplar> filteredExemplars
- Map<Exemplar,double[]> exemplarAvgRatingNumberOfRatingsMap
- Map<Exemplar,JPanel> exemplarJPanelMap
- Map<String,JCheckBox> selectedExemplarMap
- Set<model.entities.Label> allLabels
- List<String> filteredLabels
- Map<Exemplar,List<Rating>> ratingsForExemplarLastWeek
- Map<Exemplar,List<Rating>> allRatingsForExemplar
- boolean filtered
- JScrollPane scrollPane
~ JPanel exemplarPanelParent
~ JPanel buttonPanel
~ JButton filterButton
~ JButton mostRated
~ Border border
~ JComboBox sortingComboBox
~ JComboBox sortingComboBox2
- ActionWithComponentListener closeListener
- NewTabListener exemplarListener
- ItemListener sortingListener
- FilterLabelPopupFrame filterLabelPopupFrame
- boolean ratedLastWeekFilterIsActive
- void initializeSortingListener()
+ void fetchExemplars(String)
+ void createExemplarPanels()
~ void addExemplarPanelsToParentPanel()
~ void addComponents()
~ void initializeButtonPanel()
~ void initializeFilterLabelFrame()
- void filterExemplars()
~ void openExemplars()
+ void setCloseListener(ActionWithComponentListener)
+ void setExemplarListener(NewTabListener)
+ void updateTab()
}
interface view.listeners.login.RegisterFormListener {
+ void registrationSubmitted(UserEvent)
}
class view.panels.mainFrame.exemplarTab.ExemplarTab {
- Exemplar exemplar
~ JScrollPane scrollPane
~ JScrollPane commentScrollPane
~ JPanel parentPanel
- JPanel metaInfoPanel
- JPanel problemPanel
- JPanel solutionPanel
- JPanel configurationPanel
- JPanel commentPanel
- JPanel labelPanel
- JPanel contributorPanel
~ JTextArea problemTextArea
~ JTextArea solutionTextArea
- JButton closeButton
~ JButton ratingButton
~ JButton commentButton
~ JButton addContributorButton
~ JButton updateButton
~ JButton deleteButton
~ JButton addLabelButton
~ JButton exportButton
~ JButton addToCommunityButton
- ActionWithComponentListener closeListener
- UpdateExemplarListener updateExemplarListener
- DeleteExemplarListener deleteExemplarListener
- AddLabelListener addLabelListener
- RatingListener ratingListener
- ContributorListener contributorListener
- ActionWithComponentListener exportListener
- ConfirmExemplarDeletionFrame confirmExemplarDeletionFrame
~ boolean editable
- User currentUser
- AddCommentPopupFrame commentPopup
- AddToCommunityFrame addToCommunityFrame
- List<Comment> comments
- CommentClient commentClient
~ void setLayout()
~ Border getBorder(String)
~ void initializeComponents()
- void initializeMetaInfoPanel()
+ void refreshInfoPanel()
- JPanel initializeContributorPanel()
- JPanel initializeLabelPanel()
~ void setEditable()
~ void addComponents()
~ double getAvgRating()
~ void addActionListener()
+ void setAddToCommunityListener(ActionWithStringListener)
+ void initializeDeletalFrame()
~ void initializeAddCommentPopupFrame()
~ void initializeAddToCommunityFrame()
~ void setDefaultListenerForCommentPopupFrame()
~ void fetchComments()
~ void addNewComment(String)
~ void addCommentsToPanel()
~ GridBagConstraints getDefaultGridbagConstraints()
- void addReplyListenerToButton(JButton,Comment)
+ void setCloseListener(ActionWithComponentListener)
+ void setUpdateExemplarListener(UpdateExemplarListener)
+ void setDeleteExemplarListener(DeleteExemplarListener)
+ void setAddLabelListener(AddLabelListener)
+ void setRatingListener(RatingListener)
+ void setContributorListener(ContributorListener)
+ Exemplar getExemplar()
+ JButton getUpdateButton()
+ void setExportListener(ActionWithComponentListener)
+ boolean isEditable()
}
class view.panels.mainFrame.exemplarTab.AddToCommunityFrame {
- JPanel panel
- JList communityList
- List<String> communities
- JButton addButton
- ActionWithStringListener addListener
- CommunityClient communityClient
- User user
~ void fetchCommunities()
+ void setAddListener(ActionWithStringListener)
}
class model.entities.Rating {
~ RatingPK key
- double rating
- java.sql.Date sqlDate
+ RatingPK getKey()
+ void setKey(RatingPK)
+ double getRating()
+ void setRating(double)
+ Date getSqlDate()
+ void setSqlDate(Date)
+ boolean equals(Object)
+ int hashCode()
}
class view.frames.mainFrame.MainFrame {
- JTabbedPane tabPanel
- MenuPanel menuPanel
- CMenuBar menuBar
- java.util.List<JComponent> openSearchTabs
~ void addComponents()
+ String getSearchTerm()
+ void referenceOpenTab(JComponent)
+ java.util.List<JComponent> getOpenSearchTabs()
+ void setOpenSearchTabs(java.util.List)
+ void addTab(String,Component)
+ void removeTab(Component)
+ void setLastTabSelected()
+ void setExemplarButtonListener(ActionListener)
+ void setLogoutListener(ActionListener)
+ void setContributorButtonListener(ActionListener)
+ void setCommunityButtonListener(ActionListener)
+ void setSearchExemplarListener(ActionListener)
+ void setSearchContributorListener(ActionListener)
+ void setSearchCommunityListener(ActionListener)
+ void setImportListener(ActionWithStringListener)
+ void setCreateExemplarListener(ActionListener)
}
class view.frames.mainFrame.MainFrame.MenuPanel {
- JButton exemplarButton
- JButton communityButton
- JButton contributorButton
- JButton searchButton
- JComboBox searchCombobox
- JTextField searchField
~ ActionListener exemplarButtonListener
~ ActionListener searchExemplarListener
~ ActionListener searchContributorListener
~ ActionListener searchCommunityListener
~ void addDummyPanels(int)
~ void addSearchButtonListener()
}
class view.frames.mainFrame.MainFrame.CMenuBar {
- JMenu menu
- JMenu exemplarMenu
- JMenuItem importExemplarItem
- JMenuItem createExemplarItem
- JMenuItem logOutItem
- ActionWithStringListener importListener
- ActionListener createExemplarListener
- ActionListener logoutListener
- void addListeners()
}
class model.entities.RatingPK {
- User user
- Exemplar exemplar
+ User getUser()
+ void setUser(User)
+ Exemplar getExemplar()
+ void setExemplar(Exemplar)
+ int hashCode()
+ boolean equals(Object)
+ String toString()
}
class model.httpclients.HttpConstants {
# {static} String URL
}
class model.entities.Exemplar {
- String name
- String problem
- String solution
- User creator
- List<User> contributors
- List<Label> labels
+ String getName()
+ void setName(String)
+ String getProblem()
+ void setProblem(String)
+ String getSolution()
+ void setSolution(String)
+ User getCreator()
+ void setCreator(User)
+ List<User> getContributors()
+ void setContributors(List<User>)
+ List<Label> getLabels()
+ void setLabels(List<Label>)
+ boolean equals(Object)
+ int hashCode()
+ String toString()
}
class model.httpclients.LabelClient {
- HttpClient client
- String URL
- ObjectMapper mapper
- HttpRequest request
- HttpResponse<String> response
+ Label add(Label)
}
class view.panels.mainFrame.CommunityTab {
- Community community
- User currentUser
- ActionWithComponentListener closeListener
- List<Exemplar> referenceExemplars
- JPanel parentPanel
- JPanel metaInfoPanel
- JPanel configurationPanel
~ JScrollPane scrollPane
- JPanel buttons
- JButton updateButton
- JButton deleteButton
- JButton joinButton
- JButton closeButton
- JPanel exemplarParentPanel
- JPanel membersParentPanel
- ActionWithUserListener joinListener
- ActionWithUserListener leaveListener
- ActionWithStringListener showExemplarListener
- ActionWithStringListener removeExemplarListener
- ActionListener joinAction
- ActionListener leaveAction
- List<User> members
- UpdateCommunityListener updateCommunityListener
- DeleteCommunityListener deleteCommunityListener
- ConfirmCommunityDeletionFrame confirmCommunityDeletionFrame
- ActionWithStringListener memberClickedListener
~ boolean editable
- Map<User,JPanel> membersJPanelMap
- JButton leaveButton
~ void setEditable()
~ void addComponents()
~ void setLayout()
~ Border getBorder(String)
~ void addActionListener()
~ void initializeActionListeners()
~ void initializeDeleteFrame()
~ void initializeComponents()
~ void initializeButtons()
- void initializeMetaInfoPanel()
+ boolean userIsMember(User)
~ void initializeExemplarParentPanel()
+ void createMemberPanels()
+ JPanel createMemberPanel(User)
~ void addMemberPanelsToParentPanel()
+ void setUpdateCommunityListener(UpdateCommunityListener)
+ void setDeleteCommunityListener(DeleteCommunityListener)
+ void setCloseListener(ActionWithComponentListener)
+ void setJoinCommunityListener(ActionWithUserListener)
+ boolean isEditable()
+ Community getCommunity()
+ void setLeaveListener(ActionWithUserListener)
+ void setMemberClickedListener(ActionWithStringListener)
+ void setShowExemplarListener(ActionWithStringListener)
+ void setRemoveExemplarListener(ActionWithStringListener)
}
abstract class model.httpclients.Client {
- HttpClient client
- String URL
- ObjectMapper mapper
- HttpRequest request
- HttpResponse<String> response
+ {abstract}T add(T)
+ {abstract}void delete(String)
+ {abstract}List<T> getAll()
+ {abstract}T get(String)
+ {abstract}T update(String,T)
}
interface view.listeners.login.RegisterButtonListener {
~ void registerFormRequested()
}
class view.frames.login.RegisterForm {
~ Container container
~ JLabel title
~ JLabel userNameLabel
~ JLabel fullNameLabel
~ JLabel passwordLabel2
~ JLabel passwordLabel1
~ JLabel contributorLabel
~ JCheckBox contributorCheckBox
~ JTextField userNameText
~ JTextField fullNameText
~ JPasswordField passwordField1
~ JPasswordField passwordField2
~ JButton submitButton
~ JButton resetButton
~ JTextArea welcomeArea
~ Border border
- String font
- RegisterFormListener registerFormListener
+ void setLayoutManager()
+ void setLocationAndSize()
+ void styleComponents()
+ void addComponents()
~ void addActionListeners()
+ RegisterFormListener getRegisterFormListener()
+ void setRegisterFormListener(RegisterFormListener)
+ JCheckBox getContributorCheckBox()
+ Container getContainer()
}
interface view.listeners.mainframe.ActionWithComponentListener {
~ void componentSubmitted(Component)
}
class view.frames.mainFrame.AddCommentPopupFrame {
- JPanel infoPanel
- JLabel infoLabel
- JTextField commentField
- JButton button
- ExemplarTab tab
- NewCommentListener listener
+ void setListener(NewCommentListener)
+ ExemplarTab getTab()
+ String getComment()
+ void clean()
}
interface view.listeners.mainframe.NewRatingListener {
+ void RatingSubmitted(int)
}
class model.httpclients.UserClient {
- HttpClient client
- String URL
- ObjectMapper mapper
- HttpRequest request
- HttpResponse<String> response
+ User add(User)
+ void delete(String)
+ List<User> getAll()
+ User get(String)
+ User update(String,User)
+ List<User> searchUsers(String)
}
class view.frames.mainFrame.NewExemplarPopupFrame {
- JPanel infoPanel
- JLabel infoLabel
- JPanel namePanel
- JLabel nameLabel
- JTextField nameField
- JButton button
- NewExemplarListener listener
+ void setListener(NewExemplarListener)
+ void clean()
}
class view.panels.mainFrame.homeTab.HomeTab {
~ User user
~ JPanel communitiesAndProfile
~ ProfilePanel profilePanel
~ MyExemplarsPanel myExemplarsPanel
~ MyCommunitiesPanel myCommunitiesPanel
~ void initializePanels()
~ Border createBorder(String)
+ void refresh()
+ void setUpdateUserListener(ProfilePanelListener)
+ void setDeleteUserListener(ProfilePanelListener)
+ void setOpenExemplarListener(NewTabListener)
+ void setOpenCommunityListener(NewTabListener)
+ void setCreateExemplarListener(ActionListener)
+ void setCreateCommunityListener(ActionListener)
+ void setUser(User)
+ ProfilePanel getProfilePanel()
+ void setCreateExemplarLibraryListener(ActionListener)
+ void setCreateContributorLibraryListener(ActionListener)
}
class view.frames.mainFrame.NewLabelPopupFrame {
- JPanel infoPanel
- JLabel infoLabel
- JPanel namePanel
- JLabel nameLabel
- JTextField nameField
- JButton button
- ExemplarTab tab
- NewLabelListener listener
+ void setListener(NewLabelListener)
+ ExemplarTab getTab()
+ void setTab(ExemplarTab)
+ void clean()
+ NewLabelListener getListener()
}
interface view.listeners.mainframe.NewCommentListener {
~ void addNewComment(String)
}
interface view.listeners.mainframe.exemplarTab.ContributorListener {
~ void frameRequested(ExemplarTab)
}
interface view.listeners.mainframe.homeTab.NewTabListener {
+ void tabRequested(List<String>)
}
class view.panels.mainFrame.contributorTab.ContributorTab {
- User contributor
- List<Label> labels
- List<Exemplar> exemplars
~ JScrollPane scrollPane
~ JPanel parentPanel
- JPanel metaInfoPanel
- JPanel configurationPanel
- JPanel labelPanel
- JPanel buttonPanel
- JButton closeButton
- JButton openExemplarsButton
- ActionWithComponentListener closeListener
- ExemplarClient exemplarClient
- RatingClient ratingClient
- Map<Exemplar,double[]> ratingMap
- Map<Exemplar,JPanel> exemplarJPanelMap
- JPanel exemplarPanelParent
~ Border border
- Map<String,JCheckBox> selectedExemplarMap
- NewTabListener exemplarListener
~ void setLayout()
~ Border getBorder(String)
~ void initializeButtons()
~ void initializeComponents()
- void initializeMetaInfoPanel()
- JPanel initializeLabelPanel()
~ void addComponents()
~ double getAvgRating()
~ List<Label> getLabels()
~ void addActionListener()
+ void setCloseListener(ActionWithComponentListener)
+ User getContributor()
+ void createExemplarPanels()
~ void addExemplarPanelsToParentPanel()
~ void openExemplars()
+ void setExemplarListener(NewTabListener)
}
class view.frames.mainFrame.NewCommunityPopupFrame {
- JPanel infoPanel
- JLabel infoLabel
- JPanel namePanel
- JLabel nameLabel
- JTextField nameField
- JButton button
- NewCommunityListener listener
+ void setListener(NewCommunityListener)
+ void clean()
}
interface view.listeners.mainframe.exemplarTab.UpdateExemplarListener {
~ void updateRequested(Exemplar)
}


view.frames.mainFrame.JFrame <|-- view.frames.mainFrame.FilterLabelPopupFrame
view.frames.mainFrame.JPanel <|-- view.frames.mainFrame.LabelPanel
model.httpclients.Client <|-- model.httpclients.RatingClient
view.panels.mainFrame.homeTab.JPanel <|-- view.panels.mainFrame.homeTab.MyExemplarsPanel
view.frames.mainFrame.JFrame <|-- view.frames.mainFrame.NewRatingPopupFrame
view.frames.mainFrame.JFrame <|-- view.frames.mainFrame.ConfirmCommunityDeletionFrame
view.panels.mainFrame.JPanel <|-- view.panels.mainFrame.CommunityLibraryTab
view.panels.mainFrame.homeTab.JPanel <|-- view.panels.mainFrame.homeTab.ProfilePanel
view.panels.mainFrame.homeTab.ProfilePanel +.. view.panels.mainFrame.homeTab.ProfilePanel.ConfirmDeletalFrame
view.panels.mainFrame.homeTab.JFrame <|-- view.panels.mainFrame.homeTab.ProfilePanel.ConfirmDeletalFrame
model.httpclients.Client <|-- model.httpclients.ExemplarClient
view.frames.mainFrame.JFrame <|-- view.frames.mainFrame.ConfirmExemplarDeletionFrame
view.panels.mainFrame.homeTab.JPanel <|-- view.panels.mainFrame.homeTab.MyCommunitiesPanel
model.httpclients.Client <|-- model.httpclients.CommentClient
view.frames.login.JFrame <|-- view.frames.login.LoginFrame
view.frames.mainFrame.JFrame <|-- view.frames.mainFrame.AddUserFrame
view.panels.mainFrame.JPanel <|-- view.panels.mainFrame.ContributorLibraryTab
model.httpclients.Client <|-- model.httpclients.CommunityClient
view.panels.mainFrame.JPanel <|-- view.panels.mainFrame.ExemplarLibraryTab
view.panels.mainFrame.exemplarTab.JPanel <|-- view.panels.mainFrame.exemplarTab.ExemplarTab
view.panels.mainFrame.exemplarTab.JFrame <|-- view.panels.mainFrame.exemplarTab.AddToCommunityFrame
view.frames.mainFrame.JFrame <|-- view.frames.mainFrame.MainFrame
view.frames.mainFrame.MainFrame +.. view.frames.mainFrame.MainFrame.MenuPanel
view.frames.mainFrame.JPanel <|-- view.frames.mainFrame.MainFrame.MenuPanel
view.frames.mainFrame.MainFrame +.. view.frames.mainFrame.MainFrame.CMenuBar
view.frames.mainFrame.JMenuBar <|-- view.frames.mainFrame.MainFrame.CMenuBar
view.panels.mainFrame.JPanel <|-- view.panels.mainFrame.CommunityTab
view.frames.login.JFrame <|-- view.frames.login.RegisterForm
view.frames.mainFrame.JFrame <|-- view.frames.mainFrame.AddCommentPopupFrame
model.httpclients.Client <|-- model.httpclients.UserClient
view.frames.mainFrame.JFrame <|-- view.frames.mainFrame.NewExemplarPopupFrame
view.panels.mainFrame.homeTab.JPanel <|-- view.panels.mainFrame.homeTab.HomeTab
view.frames.mainFrame.JFrame <|-- view.frames.mainFrame.NewLabelPopupFrame
view.panels.mainFrame.contributorTab.JPanel <|-- view.panels.mainFrame.contributorTab.ContributorTab
view.frames.mainFrame.JFrame <|-- view.frames.mainFrame.NewCommunityPopupFrame
@enduml