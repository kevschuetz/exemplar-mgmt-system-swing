@startuml
skinparam classAttributeIconSize 0
package controller{
class FrameController{
#currentUser : Users
#currentExemplar : Exemplar
--
Frames
--
#mainFrame : MainFrame
#userFrame : UserFrame
#communityFrame : CommunityFrame
}
}

package view{
package frames{
class MainFrame extends JFrame{
#exemplarPanel : ExemplarPanel
#allExemplarsPanel : AllExemplarsPanel
#menuBar : MenuBar
}
class UserFrame extends JFrame{
#user : Users

#username : JLabel
#contributedTo : Exemplar[]
#memberOf : Community[]

}

class CommunityFrame extends JFrame{
#community : Community

#members : Users[]
#exemplars : Exemplar[]
#admins : Users[]
}

}
package panels{
class MenuBar extends JMenuBar{
#profile : JMenuItem

}

class ExemplarPanel extends JPanel{
#exemplar : Exemplar
#avgRating : int
#labels : Label[]

#nameLabel : JLabel
#nameField : JTextField
#descriptionLabel : JLabel
#descriptionField : JTextArea
#solutionLabel : JLabel
#solutionField : JTextArea
#avgRatingView : JLabel
#labelView : List<JPanel>
#ratingSlider : JSlider
#submitRatinButton : JButton

void paint();
}
class AllExemplarsPanel extends JPanel{
#exemplars : List<Exemplar>
#exemplarList : JList
#showExemplarButton : JButton
void paint()
}
}
}

package model{
package entities{
class Exemplar{
#creator : Contributor
#problem : String
#solution : String
#labels : List<Label>
#contributors : List<Contributor>
#ratings : List<Rating>
}

class User{
#username : String
#password : String
#fullname : String
}

class Contributor{

}
Contributor --|> User


class Label{
 #value : String
}


class Community{
#name : String
#creator : Users
#members : List<User>
#exemplars : List<Exemplar>
}

class Rating{
#exemplar : Exemplar
#rater : Users
#rating : double
}
}
package httpClients{
abstract class Client<T>{
#client : HttpClient
#request : HttpRequest
#response : HttpResponse
#mapper : ObjectMapper
#url : String
void add(T value)
T get(String id)
T[] getAll()
void delete (String id)
}

class UserClient<Users> extends Client{
}
class ExemplarClient<Exemplar> extends Client{
void addLabelToExemplar(Exemplar e, Label l)
void addContributorToExemplar(Exemplar e, Contributor c)
void addRatingToExemplar(Rating r)

List<Contributor> getContributors(Exemplar e)
List<Rating> getRatings(Exemplar e)
List<Label> getLabels(Exemplar e)
}
class CommunityClient<Community> extends Client{
void addMemberToCommunity(Community c, Users u)
void addExemplarToCommunity(Community c, Users u)

List<Users> getAdministratorsOfComm(Community c)
List<Users> getMembersOfCOmm((Community c)
List<Exemplar> getExemplarsOfComm(Community c)

void rmvMemberOfCommunity(Community c, Users u)
void rmvExemplarOfCommunity(Community c, Exemplar e)
}

class LabelClient<Label> extends Client{
void addLabelToExemplar(Label l, Exemplar e)
List<Label> getLabelsForExemplar(Exemplar e)
void rmvLabelFromExemplar(Exemplar e, Label l)
}

class RatingClient<Rating> extends Client{
void addRatingToExemplar(Exemplar e, Rating r)
void removeRatingFromExemplar(Exemplar e, Rating r)
List<Rating> getRatingsForExemplar(Exemplar e)
}
}
}
@enduml
