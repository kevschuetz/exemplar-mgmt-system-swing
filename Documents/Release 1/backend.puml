@startuml
package app{
class Application{
main()
}
}


package entities{
class Exemplar{
#creator : Contributor
#problem : String
#solution : String
#labels : List<Label>
#contributors : List<Contributor>
#ratings : List<Rating>
}

class User{
#username : String
#password : String
}

class Contributor{

}
Contributor --|> User


class Label{
 #value : String
}


class Community{
#name : String
#creator : Users
#members : List<User>
#exemplars : List<Exemplar>
}

class Rating{
#exemplar : Exemplar
#rater : Users
#rating : double
}
}

package repositories{
class JpaRepository<T, ID>{
void	deleteAllInBatch()
deleteInBatch(Iterable<T> entities)
findAll()
findAll(Example<V> example)
findAll(Example<V> example, Sort sort)
findAll(Sort sort)
findAllById(Iterable<ID> ids)
flush()
getOne(ID id)
saveAll(Iterable<V> entities)
saveAndFlush(S entity)
long	count()
void	delete(T entity)
void	deleteAll()
void	deleteAll(Iterable<? extends T> entities)
void	deleteById(ID id)
boolean	existsById(ID id)
Iterable<T>	findAll()
Iterable<T>	findAllById(Iterable<ID> ids)
Optional<T>	findById(ID id)
<V extends T> V save(V entity)
<V extends T> Iterable<V>	saveAll(Iterable<V> entities)

}
class ExemplarRepository<Exemplar, String> extends JpaRepository{
}
class UserRepository<Users, String> extends JpaRepository{
}
class RatingRepository<Rating, String> extends JpaRepository{
}
class CommunityRepository<Exemplar, String> extends JpaRepository{
}
class LabelRepository<Label, String> extends JpaRepository{
}
class ContributorRepository<ContributedToExemplar, String> extends JpaRepository{
}
class isLabeledRepository<IsLabeledAs, String> extends JpaRepository{
}
class CommExemplarRepository<CommunityExemplar, String> extends JpaRepository{
}
class MemberRepository<IsMemberOf, String> extends JpaRepository{
}
class AdminRepository<IsAdminOf, String> extends JpaRepository{
}

}

package controllers{
class UserController{
add()
get()
getAll()
delete()
}

class ExemplarController{
add()
get()
getAll()
delete()
addContributor()
}

class CommunityController{
add()
get()
getAll()
delete()
addExemplar()
addMember()
addAdministrator()
}

class RatingController{
add()
get()
getAll()
delete()
}

class LabelController{
add()
get()
delete()
getAll()

addToExemplar()
removeFromExemplar()
}
}

@enduml